<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Functionality">
<Heading>Functionality</Heading>

<P/>
<Section Label="Chapter_Functionality_Section_Methods">
<Heading>Methods</Heading>

<P/>
 Once the package is loaded the user may call <Code>SmallGroup(1024,i)</Code> and receive either a group if available or a <Emph>partially constructed group</Emph> which has the following attributes set
<List>
<Item>
p-class
</Item>
<Item>
Rank
</Item>
<Item>
Heritage
</Item>
<Item>
Order
</Item>
</List>
<P/>
<Example><![CDATA[
gap> G:=SmallGroup(1024,1); #this group is available
<pc group of size 1024 with 10 generators>
gap> RankPGroup(G);
4
gap> PClassPGroup(G);
2
gap> Heritage(G);
[ 16, 14, 1 ]
gap> H:=SmallGroup(1024,3568); #this is a partially constructed group
<pc group with 0 generators>
gap> PClassPGroup(H);
2
gap> RankPGroup(H);
5
gap> Heritage(H);
[ 32, 51, 1 ]
gap> K:=SmallGroup(1024,3569); #this is a partially constructed group
<pc group with 0 generators>
gap> PClassPGroup(K);
2
gap> RankPGroup(K);
5
gap> Heritage(K);
[ 32, 51, 2 ]
#notice that H,K have the same parent group but their age differs
]]></Example>


<ManSection>
  <Func Arg="N" Name="AvailableMap" />
 <Returns><Code>int</Code>
</Returns>
 <Description>
 For <Math>1 \leq i \leq 683,875,133</Math> this function will return the SmallGroup ID of the <Math>i</Math>th available group among all the groups of order 1024.
 </Description>
</ManSection>


<Example><![CDATA[
#groups 1-3567 are available SmallGroup(1024,3568) is not available
gap> g:=SmallGroup(1024,3567);
<pc group of size 1024 with 10 generators> #this is an available group
gap> g:=SmallGroup(1024,3568);
<pc group with 0 generators> #this is a partially constructed group
#the next available group has index 378632399 
gap> AvailableMap(3568)
378632399
#access the ith available group of order 1024
gap> SmallGroup(1024,AvailableMap(i)) #for i <= 683,875,1333
]]></Example>


<ManSection>
  <Func Arg="N" Name="InverseAvailableMap" />
 <Returns><Code>int</Code>
</Returns>
 <Description>
 For <Math>1 \leq i \leq 49,487,367,289</Math> if <Code>SmallGroup(1024,i)</Code> is available this will return its position in the available groups list or else it will print a message telling you that it is not available and return 0.
 </Description>
</ManSection>


<Example><![CDATA[
gap> InverseAvailableMap(AvailableMap(i)) = i;
gap> InverseAvailableMap(3568);
This is an immediate descendant of the elementary abelian group of order 32 and is not available
0
]]></Example>


<ManSection>
  <Attr Arg="G" Name="Heritage" Label="for IsGroup"/>
 <Returns><Code>list</Code>
</Returns>
 <Description>
 Returns as a list the following information for a group of order 1024 loaded from the library <Code>[ParentGroupID, ParentGroupOrder, Age]</Code>. The <Emph>Age</Emph> of a group is the position of the group among its siblings in the ordered list of their standard PC codes.
 </Description>
</ManSection>


</Section>


</Chapter>

